{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/FormTodo/FormTodo.js","components/Footer/Footer.js","App.js","index.js"],"names":["TodoItem","_ref","todo","index","handleDelete","handleClickCheckBox","react_default","a","createElement","className","completed","type","onClick","checked","title","TodoList","todos","length","map","components_TodoItem_TodoItem","key","id","FormTodo","state","handleClick","event","preventDefault","target","text","value","addTodo","_this","props","newTodo","setState","prevState","handleChange","onSubmit","this","name","placeholder","onChange","style","display","React","Component","Footer","originalTodos","filterAll","filterActive","filterCompleted","activeTab","clearAllCompleted","filter","elem","href","App","statusAllTodos","concat","Object","toConsumableArray","comleted","items","i","assign","handleCheckAll","_objectSpread","Fragment","components_FormTodo_FormTodo","htmlFor","components_TodoList_TodoList","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.86de1a40.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoItem = ({\n  todo, index, handleDelete, handleClickCheckBox,\n}) => (\n  <li className={todo.completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        onClick={() => handleClickCheckBox(index)}\n        checked={todo.completed}\n      />\n      <label>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleDelete(todo)}\n      />\n    </div>\n  </li>\n);\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos, handleDelete, handleClickCheckBox }) => (\n  <ul className=\"todo-list\">\n    {todos.length > 0\n      && todos.map((todo, index) => (\n        <TodoItem\n          todo={todo}\n          index={index}\n          key={todo.id}\n          handleDelete={handleDelete}\n          handleClickCheckBox={handleClickCheckBox}\n        />\n      ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\n\nclass FormTodo extends React.Component {\n  state = {\n    title: '',\n    id: 1,\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n    if (event.target.text.value.length === 0) {\n      return false;\n    }\n\n    const { addTodo } = this.props;\n    const newTodo = {\n      title: this.state.title,\n      completed: false,\n      id: this.state.id,\n    };\n\n    this.setState(prevState => ({ title: '', id: prevState.id + 1 }));\n\n    addTodo(newTodo);\n  };\n\n  handleChange = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleClick}>\n        <input\n          className=\"new-todo\"\n          name=\"text\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.title}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" style={{ display: 'none' }} />\n      </form>\n    );\n  }\n}\n\nexport default FormTodo;\n","import React from 'react';\n\nconst Footer = ({\n  todos,\n  originalTodos,\n  filterAll,\n  filterActive,\n  filterCompleted,\n  activeTab,\n  clearAllCompleted,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {originalTodos.filter(elem => elem.completed === false).length}\n      {' '}\nitems left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={activeTab === 'all' && 'selected'}\n          onClick={filterAll}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={activeTab === 'active' && 'selected'}\n          onClick={filterActive}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={activeTab === 'completed' && 'selected'}\n          onClick={filterCompleted}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n    {todos.filter(elem => elem.completed === true).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={clearAllCompleted}\n      >\n        Clear all completed\n      </button>\n    )}\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/TodoList/TodoList';\nimport FormTodo from './components/FormTodo/FormTodo';\nimport Footer from './components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    activeTab: '',\n    statusAllTodos: true,\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      originalTodos: [...prevState.originalTodos, todo],\n    }));\n\n    switch (this.state.activeTab) {\n      case 'active':\n        this.filterActive();\n        break;\n      case 'all':\n        this.filterAll();\n        break;\n      case 'completed':\n        this.filterCompleted();\n        break;\n      default:\n    }\n  };\n\n  handleDelete = (todo) => {\n    !todo.comleted\n      && this.setState(prevState => ({ items: prevState.items - 1 }));\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(elem => elem.id !== todo.id),\n      originalTodos: [...prevState.todos].filter(elem => elem.id !== todo.id),\n    }));\n  };\n\n  handleClickCheckBox = (index) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((elem, i) => (i === index\n        ? Object.assign(elem, { completed: !prevState.todos[i].completed })\n        : elem)),\n    }));\n  };\n\n  filterAll = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos],\n      activeTab: 'all',\n    }));\n  };\n\n  filterActive = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos].filter(\n        todo => todo.completed === false\n      ),\n      activeTab: 'active',\n    }));\n  };\n\n  filterCompleted = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos].filter(\n        todo => todo.completed === true\n      ),\n      activeTab: 'completed',\n    }));\n  };\n\n  handleCheckAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodos,\n      })),\n      originalTodos: prevState.originalTodos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodos,\n      })),\n      statusAllTodos: !prevState.statusAllTodos,\n    }));\n  };\n\n  clearAllCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      originalTodos: prevState.originalTodos.filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <section className=\"todoapp\">\n          <header className=\"header\">\n            <h1>TODOS</h1>\n            <FormTodo addTodo={this.addTodo} />\n          </header>\n\n          <section className=\"main\" style={{ display: 'block' }}>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onClick={this.handleCheckAll}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            <>\n              {' '}\n              <TodoList\n                todos={this.state.todos}\n                handleDelete={this.handleDelete}\n                handleClickCheckBox={this.handleClickCheckBox}\n              />\n              {this.state.originalTodos.length > 0 && (\n                <Footer\n                  todos={this.state.todos}\n                  originalTodos={this.state.originalTodos}\n                  filterAll={this.filterAll}\n                  filterActive={this.filterActive}\n                  filterCompleted={this.filterCompleted}\n                  activeTab={this.state.activeTab}\n                  clearAllCompleted={this.clearAllCompleted}\n                />\n              )}\n            </>\n          </section>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}